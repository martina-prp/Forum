@using SiteSystem.Models
@using SiteSystem.Common.Paging
@using System.Text.RegularExpressions

@model PaginatedList<Comment>

<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th>Forum</th>
                <th>Topic</th>
                <th>Comment Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var comment in Model)
            {
                <tr>
                    <td>
                        <h4>@Html.ActionLink(comment.Topic.Forum.ForumName, "Info", "Forum", new { @comment.Topic.Forum.Id }, null)</h4>
                    </td>
                    <td>
                        <div>
                            <h4>@Html.ActionLink(comment.Topic.TopicName, "Info", "Topic", new { @comment.Topic.Id }, null)</h4>
                        </div>
                        <div>Created on: @comment.DateCreated</div>
                    </td>
                    <td width="50" style="word-wrap: break-word">
                        @Html.ActionLink(String.Join(" ", Regex.Replace(comment.Text, "<.*?>", "").Trim().Split(' ').Take(10)),
                            "info", "Topic", new { id = @comment.Topic.Id }, null);
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="text-center">
    <ul class="pagination">
        @if (Model.HasPreviousPage && Model.HasNextPage)
        {
            <li>
                @Ajax.RouteLink(
                    linkText: "<<<",
                    routeName: "DashboardCommentsPaging",
                    routeValues: new { page = (Model.PageIndex - 1) },
                    ajaxOptions: new AjaxOptions
                    {
                        HttpMethod = "GET",
                        UpdateTargetId = "dashboard-container",
                        InsertionMode = InsertionMode.Replace,
                    })
             </li>
            <li>
                @Ajax.RouteLink(
                    linkText: ">>>",
                    routeName: "DashboardCommentsPaging",
                    routeValues: new { page = (Model.PageIndex + 1) },
                    ajaxOptions: new AjaxOptions
                    {
                        HttpMethod = "GET",
                        UpdateTargetId = "dashboard-container",
                        InsertionMode = InsertionMode.Replace,
                    })
            </li>
        }
        else
        {
            if (Model.HasPreviousPage)
            {
                <li>
                    @Ajax.RouteLink(
                        linkText: "<<<",
                        routeName: "DashboardCommentsPaging",
                        routeValues: new { page = (Model.PageIndex - 1) },
                        ajaxOptions: new AjaxOptions
                        {
                            HttpMethod = "GET",
                            UpdateTargetId = "dashboard-container",
                            InsertionMode = InsertionMode.Replace,
                        })
                </li>
            }

            if (Model.HasNextPage)
            {
                    <li>
                        @Ajax.RouteLink(
                        linkText: ">>>",
                        routeName: "DashboardCommentsPaging",
                        routeValues: new { page = (Model.PageIndex + 1) },
                        ajaxOptions: new AjaxOptions
                        {
                            HttpMethod = "GET",
                            UpdateTargetId = "dashboard-container",
                            InsertionMode = InsertionMode.Replace,
                        })
                    </li>
                }
            }
    </ul>
</div>

